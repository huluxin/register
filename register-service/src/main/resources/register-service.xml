<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

    <!--本示例采用DBCP数据源,连接池配置如下-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/bbs"/>
        <property name="username" value="root"/>
        <property name="password" value="admin"/>
    </bean>

    <!-- 创建SqlSessionFactory实例 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--dataSource属性指定要用到的数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--configLocation属性指定mybatis的主配置文件-->
        <property name="configLocation" value="mybatis-config.xml"></property>
        <!-- 从类路径中加载映射文件，相对于类的根路径-->
        <property name="mapperLocations" value="classpath:mybatis/*.xml"></property>
    </bean>

    <bean id="parentMapper" class="org.mybatis.spring.mapper.MapperFactoryBean" abstract="true">
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:register-service.properties"></property>
    </bean>

    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="protocol" value="${email.protocol}" />
        <property name="host" value="${email.host}" />
        <property name="port" value="${email.port}" />
        <property name="username" value="${email.username}" />
        <property name="password" value="${email.password}" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.${email.protocol}.auth">${email.auth}</prop>
            </props>
        </property>
    </bean>

    <bean id="registerEmailService" class="com.IsoftStone.register.email.RegisterEmailServiceImpl">
        <property name="javaMailSender" ref="javaMailSender" />
        <property name="systemEmail" value="${email.systemEmail}"/>
    </bean>
    <bean id="registerCaptchaService" class="com.IsoftStone.register.captcha.RegisterCaptchaServiceImpl"></bean>

    <bean id="accountPersistService" class="com.IsoftStone.register.persist.AccountPersistServiceImpl">
        <property name="file" value="${persist.file}"/>
    </bean>
    <!--<bean id="registerAccountPersist" class="com.IsoftStone.register.dao.bo.RegisterAccountimpl"></bean>-->
   <!-- <bean id="registerAccountService" class="com.IsoftStone.register.service.dao.bo.RegisterAccountServiceImpl">
        <property name="accountMapper" ref="accountMapper"/>
    </bean>-->

    <bean id="registerService" class="com.IsoftStone.register.service.RegisterServiceImpl">
        <property name="accountPersistService" ref="accountPersistService"/>
        <property name="registerEmailService" ref="registerEmailService" />
        <property name="registerCaptchaService" ref="registerCaptchaService" />
    </bean>

    <bean id="accountMapper" parent="parentMapper">
        <property name="mapperInterface" value="com.IsoftStone.register.dao.bo.RegisterAccountInf"/>
    </bean>
</beans>