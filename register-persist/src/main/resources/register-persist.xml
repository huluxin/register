<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
    		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
       default-autowire="byName" default-lazy-init="false">

<!--    spring2.5.6 配置
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:account-service.properties"></property>
    </bean>
    <bean id="accountPersistService" class="com.IsoftStone.register.persist.AccountPersistServiceImpl">
        <property name="file" value="${persist.file}"/>
    </bean>-->
    <!-- 自动扫描com.abc.service包及其子包下的所有bean类 -->
    <context:component-scan base-package="com.IsoftStone.register.dao" />

    <!--本示例采用DBCP数据源,连接池配置如下-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/bbs"/>
        <property name="username" value="root"/>
        <property name="password" value="admin"/>
    </bean>

    <!-- 创建SqlSessionFactory实例 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--dataSource属性指定要用到的数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--configLocation属性指定mybatis的主配置文件-->
        <property name="configLocation" value="mybatis-config.xml"></property>
        <!-- 从类路径中加载映射文件，相对于类的根路径-->
        <property name="mapperLocations" value="classpath:mybatis/*.xml"></property>
    </bean>

    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        &lt;!&ndash;basePackage指定要扫描的包，此包及其子包之下的映射器接口
       都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔&ndash;&gt;
        <property name="basePackage" value="com.IsoftStone.register.dao"/>
    </bean>-->
    <!--最原始的映射器bean配置，sqlSessionFactory属性指定要用到的SqlSessionFactory实例，
    mapperInterface属性指定映射器接口，用于实现此接口并生成映射器对象
  <bean id="studentMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
     <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	 <property name="mapperInterface" value="com.abc.mapper.StudentMapper" />
  </bean>
-->

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--basePackage指定要扫描的包，此包及其子包之下的映射器接口
        都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔-->
        <property name="basePackage" value="com.IsoftStone.register.dao.bo"/>
    </bean>
    <!--parentMapper为父bean，studentMapper和teacherMapper为两个子bean，
  从父bean中继承class和sqlSessionFactory的配置信息，并都有自己特有的
  mapperInterface属性值。-->
    <bean id="parentMapper" class="org.mybatis.spring.mapper.MapperFactoryBean" abstract="true">
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
    <bean id="accountMapper" parent="parentMapper">
        <property name="mapperInterface" value="com.IsoftStone.register.dao.bo.RegisterAccountInf"/>
    </bean>
</beans>